---
name: Build openssl
description: Build and cache openssl libraries
inputs:
  version:
    description: The openssl version to build
    required: true
  architecture:
    description: The openssl architecture to build
    required: true
  runtime:
    description: The openssl architecture to build
    default: dynamic
outputs:
  path:
    description: The path to the openssl folder
    value:  ${{ steps.path.outputs.path }}
  path_unix:
    description: The path to the openssl folder
    value:  ${{ steps.path.outputs.path_unix }}
runs:
  using: composite
  steps:

    - id: setup
      run: |
        if ("${{ inputs.architecture }}" -eq "x64") {
          echo "cmd=VC-WIN64A" >> $env:GITHUB_OUTPUT
        } else {
          echo "cmd=VC-WIN32" >> $env:GITHUB_OUTPUT
        }
        if ("${{ inputs.runtime }}" -eq "dynamic") {
          echo "shared_flags=" >> $env:GITHUB_OUTPUT
        } else {
          echo "shared_flags=-MT" >> $env:GITHUB_OUTPUT
        }
      shell: pwsh

    - name: Download openssl
      run: |
            curl -L https://github.com/openssl/openssl/releases/download/openssl-${{ inputs.version }}/openssl-${{ inputs.version }}.tar.gz --output openssl-${{ inputs.version }}.tar.gz
            7z x openssl-${{ inputs.version }}.tar.gz
            7z x openssl-${{ inputs.version }}.tar
      working-directory: tmp
      shell: cmd

    - id: cache
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-openssl-${{ inputs.version }}-no-shared-${{ inputs.architecture }}-${{ inputs.runtime }}
        path: |
          tmp/openssl-${{ inputs.version }}/libcrypto*.*
          tmp/openssl-${{ inputs.version }}/libssl*.*
          tmp/openssl-${{ inputs.version }}/include/crypto/dso_conf.h
          tmp/openssl-${{ inputs.version }}/include/crypto/bn_conf.h
          tmp/openssl-${{ inputs.version }}/include/internal/param_names.h
          tmp/openssl-${{ inputs.version }}/include/openssl/asn1.h          
          tmp/openssl-${{ inputs.version }}/include/openssl/asn1t.h
          tmp/openssl-${{ inputs.version }}/include/openssl/bio.h
          tmp/openssl-${{ inputs.version }}/include/openssl/cmp.h
          tmp/openssl-${{ inputs.version }}/include/openssl/cms.h
          tmp/openssl-${{ inputs.version }}/include/openssl/comp.h
          tmp/openssl-${{ inputs.version }}/include/openssl/conf.h
          tmp/openssl-${{ inputs.version }}/include/openssl/configuration.h
          tmp/openssl-${{ inputs.version }}/include/openssl/core_names.h
          tmp/openssl-${{ inputs.version }}/include/openssl/crmf.h
          tmp/openssl-${{ inputs.version }}/include/openssl/crypto.h
          tmp/openssl-${{ inputs.version }}/include/openssl/ct.h
          tmp/openssl-${{ inputs.version }}/include/openssl/err.h
          tmp/openssl-${{ inputs.version }}/include/openssl/ess.h
          tmp/openssl-${{ inputs.version }}/include/openssl/fipskey.h
          tmp/openssl-${{ inputs.version }}/include/openssl/lhash.h
          tmp/openssl-${{ inputs.version }}/include/openssl/ocsp.h
          tmp/openssl-${{ inputs.version }}/include/openssl/opensslv.h
          tmp/openssl-${{ inputs.version }}/include/openssl/pkcs12.h
          tmp/openssl-${{ inputs.version }}/include/openssl/pkcs7.h
          tmp/openssl-${{ inputs.version }}/include/openssl/safestack.h
          tmp/openssl-${{ inputs.version }}/include/openssl/srp.h
          tmp/openssl-${{ inputs.version }}/include/openssl/ssl.h
          tmp/openssl-${{ inputs.version }}/include/openssl/ui.h
          tmp/openssl-${{ inputs.version }}/include/openssl/x509.h
          tmp/openssl-${{ inputs.version }}/include/openssl/x509v3.h
          tmp/openssl-${{ inputs.version }}/include/openssl/x509_acert.h
          tmp/openssl-${{ inputs.version }}/include/openssl/x509_vfy.h


    - name: Build openssl
      run: |
          perl Configure ${{ steps.setup.outputs.cmd }} no-asm no-shared ${{ steps.setup.outputs.shared_flags }}
          nmake
      working-directory: tmp/openssl-${{ inputs.version }}
      shell: cmd
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}

    - id: path
      run: |
        $path=$pwd.path
        $path_unix=$pwd.path.replace('\','/')
        echo "path=$path" >> $env:GITHUB_OUTPUT
        echo "path_unix=$path_unix" >> $env:GITHUB_OUTPUT
      shell: pwsh
      working-directory: tmp/openssl-${{ inputs.version }}
